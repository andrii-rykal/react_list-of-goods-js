{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FIELD_ABC","SORT_FIELD_LENGTH","SORT_FIELD_REVERSE","App","useState","sortField","setSortField","visibleGoods","goods","preparedGoods","sort","good1","good2","localeCompare","length","reverse","getPreparedGood","className","onClick","type","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAiB,iBACjBC,EAAoB,SACpBC,EAAqB,UAoBpB,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACMC,EApBR,SAAyBC,EAAOH,GAC9B,IAAMI,EAAa,YAAOD,GAc1B,OAZIH,IAAcL,GAChBS,EAAcC,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MAGvDP,IAAcJ,GAChBQ,EAAcC,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMG,OAASF,EAAME,UAGxDT,IAAcH,GAChBO,EAAcM,UAGTN,EAKcO,CAAgBjB,EAAiBM,GAEtD,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMZ,EAAaN,IAC5BmB,KAAK,SACLF,UAAWG,IAAG,SAAU,UAAW,CACjC,WAAYf,IAAcL,IAJ9B,iCAUA,wBACEkB,QAAS,kBAAMZ,EAAaL,IAC5BkB,KAAK,SACLF,UAAWG,IAAG,SAAU,aAAc,CACpC,WAAYf,IAAcJ,IAJ9B,4BAUA,wBACEiB,QAAS,kBAAMZ,EAAaJ,IAC5BiB,KAAK,SACLF,UAAWG,IAAG,SAAU,aAAc,CACpC,WAAYf,IAAcH,IAJ9B,qBAUe,KAAdG,GACC,wBACEa,QAAS,kBAAMZ,EAAa,KAC5Ba,KAAK,SACLF,UAAU,4BAHZ,sBAUJ,6BACGV,EAAac,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YCvFlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.41e96146.chunk.js","sourcesContent":["import { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_ABC = 'alphabetically';\nconst SORT_FIELD_LENGTH = 'length';\nconst SORT_FIELD_REVERSE = 'reverse';\n\nfunction getPreparedGood(goods, sortField) {\n  const preparedGoods = [...goods];\n\n  if (sortField === SORT_FIELD_ABC) {\n    preparedGoods.sort((good1, good2) => good1.localeCompare(good2));\n  }\n\n  if (sortField === SORT_FIELD_LENGTH) {\n    preparedGoods.sort((good1, good2) => good1.length - good2.length);\n  }\n\n  if (sortField === SORT_FIELD_REVERSE) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const visibleGoods = getPreparedGood(goodsFromServer, sortField);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setSortField(SORT_FIELD_ABC)}\n          type=\"button\"\n          className={cn('button', 'is-info', {\n            'is-light': sortField !== SORT_FIELD_ABC,\n          })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortField(SORT_FIELD_LENGTH)}\n          type=\"button\"\n          className={cn('button', 'is-success', {\n            'is-light': sortField !== SORT_FIELD_LENGTH,\n          })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => setSortField(SORT_FIELD_REVERSE)}\n          type=\"button\"\n          className={cn('button', 'is-warning', {\n            'is-light': sortField !== SORT_FIELD_REVERSE,\n          })}\n        >\n          Reverse\n        </button>\n\n        {sortField !== '' && (\n          <button\n            onClick={() => setSortField('')}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li data-cy=\"Good\" key={good}>{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}